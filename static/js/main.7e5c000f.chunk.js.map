{"version":3,"sources":["components/shared/EditButton.js","components/shared/DateInput.js","components/shared/FormButtons.js","components/shared/helpers.js","components/Education/EducationForm.js","components/Education/School.js","components/shared/AddButton.js","components/Education/Education.js","components/Experience/ExperienceForm.js","components/Experience/Workplace.js","components/Experience/Experience.js","components/General/GeneralForm.js","components/General/General.js","App.js","index.js"],"names":["EditButton","className","type","onClick","this","props","handleClick","aria-label","title","style","marginRight","aria-hidden","focusable","React","Component","DateInput","startDate","endDate","name","placeholder","value","onChange","handleChange","FormButtons","state","isList","toggleForm","setState","isFormOpen","addItem","section","itemsPath","id","uuidv4","editItem","info","newInfo","map","item","deleteItem","filtered","filter","school","e","target","handleSubmit","preventDefault","handleFormSubmit","EducationForm","degree","schoolName","bind","onSubmit","School","buttonName","deleteSchool","editSchool","data-testid","AddButton","Education","addSchool","call","saveInfo","updatedInfo","schools","education","ExperienceForm","workplace","jobTitle","companyName","jobDescription","Workplace","deleteWorkplace","editWorkplace","Experience","addWorkplace","workplaces","experience","GeneralForm","fullName","email","phone","htmlFor","General","general","App","person","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7e5c000f.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Edit } from 'react-feather';\r\n\r\nclass EditButton extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className='button-container'>\r\n                <button type='button' onClick={this.props.handleClick} aria-label='edit' title='Edit' className='edit'>\r\n                    <Edit\r\n                        className='button__icon' \r\n                        style={{marginRight: '-1px'}} \r\n                        aria-hidden='true' \r\n                        focusable='false'\r\n                    />\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditButton;","import React from 'react';\r\n\r\nclass DateInput extends React.Component {\r\n    render() {\r\n        const { startDate, endDate } = this.props;\r\n\r\n        return (\r\n            <fieldset>\r\n                <input\r\n                    className='form__date-input'\r\n                    type='text'\r\n                    name='startDate'\r\n                    aria-label='start date'\r\n                    placeholder='Start date'\r\n                    value={startDate}\r\n                    onChange={this.props.handleChange}\r\n                ></input>\r\n                <p> - </p>\r\n                <input\r\n                    className='form__date-input'\r\n                    type='text'\r\n                    name='endDate'\r\n                    aria-label='end date'\r\n                    placeholder='End date'\r\n                    value={endDate}\r\n                    onChange={this.props.handleChange}\r\n                ></input>\r\n            </fieldset>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DateInput;","import React from 'react';\r\nimport { CheckSquare, XSquare, MinusSquare } from 'react-feather';\r\n\r\nclass FormButtons extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isList: this.props.isList,\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <fieldset className='form__buttons button-container' >\r\n                <button type='submit' aria-label='submit' title='Submit' className='submit'>\r\n                    <CheckSquare\r\n                        className='button__icon'\r\n                        aria-hidden='true' \r\n                        focusable='false'\r\n                    />\r\n                </button>\r\n                {this.state.isList \r\n                ?\r\n                <button type='button' aria-label='delete' title='Delete' onClick={this.props.handleClick} className='delete'>\r\n                    <MinusSquare \r\n                        className='button__icon'\r\n                        aria-hidden='true' \r\n                        focusable='false'\r\n                    />\r\n                </button>\r\n                : null}\r\n                <button type='button' aria-label='cancel' title='Cancel' onClick={this.props.handleClick} className='cancel'>\r\n                    <XSquare\r\n                        className='button__icon'\r\n                        aria-hidden='true' \r\n                        focusable='false'\r\n                    />\r\n                </button>\r\n            </fieldset>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FormButtons;","import { v4 as uuidv4 } from 'uuid';\r\n\r\nexport function toggleForm() {\r\n    this.setState(state => ({\r\n        isFormOpen: !state.isFormOpen,\r\n    }));\r\n}\r\n\r\nexport function addItem(section, itemsPath) {\r\n    return {\r\n        [itemsPath]: [\r\n            ...this.props[section][itemsPath],\r\n            {id: uuidv4()}\r\n        ]\r\n    };\r\n}\r\n\r\nexport function editItem(info, section, itemsPath) {\r\n    const newInfo = this.props[section][itemsPath].map(item => {\r\n        if (item.id === info.id) {\r\n            return info;\r\n        }\r\n        return item;\r\n    });\r\n    \r\n    return { [itemsPath]: [...newInfo] };\r\n}\r\n\r\nexport function deleteItem(id, section, itemsPath) {\r\n    const filtered = this.props[section][itemsPath].filter(school => school.id !== id);\r\n    return { [itemsPath]: [...filtered] };\r\n}\r\n\r\nexport function handleChange(e) {\r\n    this.setState({[e.target.name]: e.target.value});\r\n}\r\n\r\nexport function handleSubmit(e) {\r\n    e.preventDefault();\r\n    this.props.handleFormSubmit(this.state);\r\n}\r\n","import React from 'react';\r\nimport DateInput from '../shared/DateInput';\r\nimport FormButtons from './../shared/FormButtons';\r\nimport { handleChange, handleSubmit } from '../shared/helpers';\r\n\r\nclass EducationForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            id: props.school.id,\r\n            degree: props.school.degree || '',\r\n            schoolName: props.school.schoolName || '',\r\n            startDate: props.school.startDate || '',\r\n            endDate: props.school.endDate || ''\r\n        }\r\n\r\n        this.handleChange = handleChange.bind(this);\r\n        this.handleSubmit = handleSubmit.bind(this);\r\n    }\r\n\r\n    render() {\r\n        const { schoolName, degree, startDate, endDate } = this.state;\r\n\r\n        return (\r\n            <form className='form' name='school-form' onSubmit={this.handleSubmit}>\r\n                <input\r\n                    type='text'\r\n                    className='form__degree-input'\r\n                    name='degree'\r\n                    aria-label='degree'\r\n                    placeholder='Degree Title'\r\n                    value={degree}\r\n                    onChange={this.handleChange}\r\n                ></input>\r\n                <input \r\n                    type='text'\r\n                    name='schoolName'\r\n                    aria-label='school name'\r\n                    placeholder='School Name'\r\n                    value={schoolName}\r\n                    onChange={this.handleChange}\r\n                ></input>\r\n                <DateInput startDate={startDate} endDate={endDate} handleChange={this.handleChange}/>\r\n                <FormButtons isList={true} handleClick={this.props.handleClick}/>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EducationForm;","import React from 'react';\r\nimport EditButton from './../shared/EditButton';\r\nimport EducationForm from './EducationForm';\r\nimport { toggleForm } from '../shared/helpers';\r\n\r\nclass School extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isFormOpen: false,\r\n        };\r\n\r\n        this.toggleForm = toggleForm.bind(this);\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.handleFormSubmit = this.handleFormSubmit.bind(this);\r\n    }\r\n\r\n    handleClick(e) {\r\n        const buttonName = e.target.className;\r\n\r\n        if (buttonName === 'edit' || buttonName === 'cancel') {\r\n            this.toggleForm();\r\n        } else if (buttonName === 'delete') {\r\n            this.props.deleteSchool(this.props.school.id);\r\n        }\r\n    }\r\n\r\n    handleFormSubmit(info) {\r\n        this.toggleForm();\r\n        this.props.editSchool(info);\r\n    }\r\n\r\n    render() {\r\n        const { degree, schoolName, startDate, endDate } = this.props.school;\r\n\r\n        return (\r\n            <div className='info-item' data-testid='school-item'>\r\n                {\r\n                    this.state.isFormOpen\r\n                    ? <EducationForm \r\n                        school={this.props.school} \r\n                        handleClick={this.handleClick} \r\n                        handleFormSubmit={this.handleFormSubmit}\r\n                    />\r\n                    :\r\n                    <div>\r\n                        <h3 className='info-item__main degree'>{degree ? degree : 'Degree Title'}</h3>\r\n                        <p className='info-item__extra school-name'>{schoolName ? schoolName : 'School Name'}</p>\r\n                        <p className='info-item__extra dates'>{startDate ? startDate : 'XXXX'} - {endDate ? endDate : 'XXXX'}</p>\r\n                        <EditButton handleClick={this.handleClick}/>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default School;","import React from 'react';\r\nimport { PlusSquare } from 'react-feather';\r\n\r\nclass AddButton extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className='button-container'>\r\n                <button type='button' aria-label='Add' title='Add' onClick={this.props.addItem}>\r\n                    <PlusSquare\r\n                        className='button__icon'\r\n                        aria-hidden='true'\r\n                        focusable='false'\r\n                    />\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddButton;","import React from 'react';\r\nimport School from './School';\r\nimport AddButton from './../shared/AddButton';\r\nimport { addItem, editItem, deleteItem } from '../shared/helpers';\r\n\r\nclass Education extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.addSchool = this.addSchool.bind(this);\r\n        this.deleteSchool = this.deleteSchool.bind(this);\r\n        this.editSchool = this.editSchool.bind(this);\r\n    }\r\n\r\n    addSchool() {\r\n        const info = addItem.call(this, 'education', 'schools');\r\n        this.props.saveInfo(info, 'education');\r\n    }\r\n\r\n    deleteSchool(id) {\r\n        const updatedInfo = deleteItem.call(this, id, 'education', 'schools')\r\n        this.props.saveInfo(updatedInfo, 'education');\r\n    }\r\n    \r\n    editSchool(info) {\r\n        const updatedInfo = editItem.call(this, info, 'education', 'schools');\r\n        this.props.saveInfo(updatedInfo, 'education');\r\n    }\r\n\r\n    render() {\r\n        const { schools } = this.props.education;\r\n\r\n        return (\r\n            <section  className=\"section\">\r\n                <h2 className=\"section__title\">Education</h2>\r\n                <div className=\"section__info\">\r\n                    {schools.map(school => {\r\n                        return (\r\n                            <School \r\n                                school={school} \r\n                                key={school.id} \r\n                                deleteSchool={this.deleteSchool} \r\n                                editSchool={this.editSchool}\r\n                            />\r\n                        );\r\n                    })}\r\n                </div>\r\n                <AddButton addItem={this.addSchool}/>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Education;","import React from 'react';\r\nimport DateInput from '../shared/DateInput';\r\nimport FormButtons from './../shared/FormButtons';\r\nimport { handleChange, handleSubmit } from '../shared/helpers';\r\n\r\nclass ExperienceForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            id: this.props.workplace.id,\r\n            jobTitle: this.props.workplace.jobTitle || '',\r\n            companyName: this.props.workplace.companyName || '',\r\n            startDate: this.props.workplace.startDate || '',\r\n            endDate: this.props.workplace.endDate || '',\r\n            jobDescription: this.props.workplace.jobDescription || ''\r\n        }\r\n\r\n        this.handleChange = handleChange.bind(this);\r\n        this.handleSubmit = handleSubmit.bind(this);\r\n    }\r\n\r\n    render() {\r\n        const { jobTitle, companyName, startDate, endDate, jobDescription } = this.state;\r\n        \r\n        return (\r\n            <form className='form' name='experience-form' onSubmit={this.handleSubmit}>\r\n                <input\r\n                    type='text'\r\n                    className='form__job-input'\r\n                    name='jobTitle'\r\n                    aria-label='job title'\r\n                    placeholder='Job title'\r\n                    value={jobTitle}\r\n                    onChange={this.handleChange}\r\n                ></input>\r\n                <input \r\n                    type='text'\r\n                    name='companyName'\r\n                    aria-label='company name'\r\n                    placeholder='Company name'\r\n                    value={companyName}\r\n                    onChange={this.handleChange}\r\n                ></input>\r\n                <DateInput startDate={startDate} endDate={endDate} handleChange={this.handleChange}/>\r\n                <textarea\r\n                    name='jobDescription'\r\n                    aria-label='job description'\r\n                    placeholder='Job description'\r\n                    value={jobDescription}\r\n                    onChange={this.handleChange}\r\n                ></textarea>\r\n                <FormButtons isList={true} handleClick={this.props.handleClick}/>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ExperienceForm;","import React from 'react';\r\nimport EditButton from './../shared/EditButton';\r\nimport ExperienceForm from './ExperienceForm';\r\nimport { toggleForm } from '../shared/helpers';\r\n\r\nclass Workplace extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isFormOpen: false,\r\n        };\r\n\r\n        this.toggleForm = toggleForm.bind(this);\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.handleFormSubmit = this.handleFormSubmit.bind(this);\r\n    }\r\n\r\n    handleClick(e) {\r\n        const buttonName = e.target.className;\r\n\r\n        if (buttonName === 'edit' || buttonName === 'cancel') {\r\n            this.toggleForm();\r\n        } else if (buttonName === 'delete') {\r\n            this.props.deleteWorkplace(this.props.workplace.id);\r\n        }\r\n    }\r\n\r\n    handleFormSubmit(info) {\r\n        this.toggleForm();\r\n        this.props.editWorkplace(info);\r\n    }\r\n\r\n    render () {\r\n        const { jobTitle, companyName, startDate, endDate, jobDescription } = this.props.workplace;\r\n\r\n        return (\r\n            <div className='info-item' data-testid='workplace-item'>\r\n                {\r\n                    this.state.isFormOpen\r\n                    ? <ExperienceForm \r\n                        handleClick={this.handleClick}\r\n                        workplace={this.props.workplace}\r\n                        handleFormSubmit={this.handleFormSubmit}\r\n                    />\r\n                    : (\r\n                        <div>\r\n                            <h3 className='info-item__main job'>{jobTitle ? jobTitle : 'Job title'}</h3>\r\n                            <p className='info-item__extra company'>{companyName ? companyName : 'Company name'}</p>\r\n                            <p className='info-item__extra dates'>{startDate ? startDate : 'XXXX'} - {endDate ? endDate : 'XXXX'}</p>\r\n                            <p className='info-item__extra description'>{jobDescription ? jobDescription : 'Job description'}</p>\r\n                            <EditButton handleClick={this.handleClick}/>\r\n                        </div>\r\n                    )\r\n                }\r\n            </div>\r\n        )\r\n    };\r\n};\r\n\r\nexport default Workplace;","import React from 'react';\r\nimport Workplace from './Workplace';\r\nimport AddButton from './../shared/AddButton';\r\nimport { addItem, editItem, deleteItem } from '../shared/helpers';\r\n\r\nclass Experience extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.addWorkplace = this.addWorkplace.bind(this);\r\n        this.editWorkplace = this.editWorkplace.bind(this);\r\n        this.deleteWorkplace = this.deleteWorkplace.bind(this);\r\n    }\r\n\r\n    addWorkplace() {\r\n        const info = addItem.call(this, 'experience', 'workplaces');\r\n        this.props.saveInfo(info, 'experience');\r\n    }\r\n\r\n    deleteWorkplace(id) {\r\n        const updatedInfo = deleteItem.call(this, id, 'experience', 'workplaces');\r\n        this.props.saveInfo(updatedInfo, 'experience');\r\n    }\r\n\r\n    editWorkplace(info) {\r\n        const updatedInfo = editItem.call(this, info, 'experience', 'workplaces');\r\n        this.props.saveInfo(updatedInfo, 'experience');\r\n    }\r\n\r\n    render() {\r\n        const { workplaces } = this.props.experience;\r\n\r\n        return (\r\n            <section className=\"section\">\r\n                <h2 className=\"section__title\">Experience</h2>\r\n                <div className=\"section__info\">\r\n                    {workplaces.map(workplace => {\r\n                        return (\r\n                            <Workplace \r\n                                workplace={workplace} \r\n                                key={workplace.id} \r\n                                editWorkplace={this.editWorkplace} \r\n                                deleteWorkplace={this.deleteWorkplace}\r\n                            />\r\n                        )\r\n                    })}\r\n                </div>\r\n                <AddButton addItem={this.addWorkplace}/>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Experience;","import React from 'react';\r\nimport FormButtons from './../shared/FormButtons';\r\nimport { handleChange, handleSubmit } from '../shared/helpers';\r\n\r\nclass GeneralForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            fullName: props.info.fullName,\r\n            email: props.info.email,\r\n            phone: props.info.phone,\r\n        }\r\n\r\n        this.handleChange = handleChange.bind(this);\r\n        this.handleSubmit = handleSubmit.bind(this);\r\n    }\r\n\r\n    render() {\r\n        const { email, phone, fullName } = this.state;\r\n\r\n        return (\r\n            <form className='form' name='general-form' onSubmit={this.handleSubmit}>\r\n                <input\r\n                    type='text'\r\n                    className='form__name-input'\r\n                    name='fullName'\r\n                    aria-label='fullName'\r\n                    placeholder='John Doe'\r\n                    value={fullName}\r\n                    onChange={this.handleChange}\r\n                ></input>\r\n                <h2 className='section__title'>Contact info</h2>\r\n                <fieldset>\r\n                    <label className='form__label' htmlFor='email'>Email: </label>\r\n                    <input \r\n                        type='email'\r\n                        id='email'\r\n                        name='email'\r\n                        placeholder='example@domain.com'\r\n                        value={email}\r\n                        onChange={this.handleChange}\r\n                    ></input>\r\n                </fieldset>\r\n                <fieldset>\r\n                    <label className='form__label' htmlFor='phone'>Phone: </label>\r\n                    <input \r\n                        type='tel'\r\n                        id='phone'\r\n                        name='phone'\r\n                        placeholder='555-555-555'\r\n                        value={phone}\r\n                        onChange={this.handleChange}\r\n                    ></input>\r\n                </fieldset>\r\n                <FormButtons isList={false} handleClick={this.props.handleClick}/>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GeneralForm;","import React from 'react';\r\nimport EditButton from './../shared/EditButton';\r\nimport GeneralForm from './GeneralForm';\r\nimport { toggleForm } from '../shared/helpers';\r\n\r\nclass General extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isFormOpen: false,\r\n        }\r\n\r\n        this.toggleForm = toggleForm.bind(this);\r\n        this.handleFormSubmit = this.handleFormSubmit.bind(this);\r\n    }\r\n\r\n    handleFormSubmit(info) {\r\n        this.toggleForm();\r\n        this.props.saveInfo(info, 'general');\r\n    }\r\n\r\n    render() {\r\n        const { isFormOpen } = this.state;\r\n        const { fullName, email, phone } = this.props.general;\r\n        \r\n        return (\r\n            <section className='section'>\r\n                {isFormOpen\r\n                ? <GeneralForm \r\n                    handleClick={this.toggleForm} \r\n                    handleFormSubmit={this.handleFormSubmit} \r\n                    info={this.props.general}\r\n                />\r\n                :                \r\n                <div className='section__info'>\r\n                    <h1 className='info-item__main name'>{fullName !== '' ? fullName : 'Your Name'}</h1>\r\n                    <h2 className='section__title'>Contact info</h2>\r\n                    <div className='info-item info-item-general'>\r\n                        <p className='info-item__extra email'>\r\n                            <span className='label'>Email:</span> {email !== '' ? email : 'your_email@gmail.com'}\r\n                        </p>\r\n                        <p className='info-item__extra phone'>\r\n                            <span className='label'>Phone:</span> {phone !== '' ? phone : 'XXX-XXX-XXX'}\r\n                        </p>\r\n                    </div>\r\n                    <EditButton handleClick={this.toggleForm}/>\r\n                </div>\r\n                }\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default General;","import React from 'react';\r\nimport Education from './components/Education/Education';\r\nimport Experience from './components/Experience/Experience';\r\nimport General from './components/General/General';\r\n\r\nclass App extends React.Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\t\r\n\t\tthis.state = {\r\n\t\t\tperson: {\r\n\t\t\t\tgeneral: {\r\n\t\t\t\t\tfullName: '',\r\n\t\t\t\t\temail: '',\r\n\t\t\t\t\tphone: ''\r\n\t\t\t\t},\r\n\t\t\t\teducation: {\r\n\t\t\t\t\tschools: []\r\n\t\t\t\t},\r\n\t\t\t\texperience: {\r\n\t\t\t\t\tworkplaces: []\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.saveInfo = this.saveInfo.bind(this);\r\n\t}\r\n\r\n\tsaveInfo(info, section) {\r\n\t\tthis.setState((prevState) => {\r\n\t\t\treturn {\r\n\t\t\t\tperson: {\r\n\t\t\t\t\t...prevState.person,\r\n\t\t\t\t\t[section]: info,\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n\trender() {\r\n\t\tconst { general, education, experience } = this.state.person;\r\n\r\n\t\treturn (\r\n\t\t\t<main className=\"app\">\r\n\t\t\t\t<General general={general} saveInfo={this.saveInfo}/>\r\n\t\t\t\t<Education education={education} saveInfo={this.saveInfo}/>\r\n\t\t\t\t<Experience experience={experience} saveInfo={this.saveInfo}/>\r\n\t\t\t</main>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}